https://bugzilla.mozilla.org/show_bug.cgi?id=425079

Index: mozilla/toolkit/content/widgets/toolbar.xml
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/widgets/toolbar.xml,v
retrieving revision 1.46
diff -u -8 -p -r1.46 toolbar.xml
--- mozilla/toolkit/content/widgets/toolbar.xml	22 Mar 2008 04:26:35 -0000	1.46
+++ mozilla/toolkit/content/widgets/toolbar.xml	27 Mar 2008 20:03:31 -0000
@@ -174,22 +174,24 @@
             }
 
             var firstChildID = this.firstPermanentChild ? this.firstPermanentChild.id : "";
             var lastChildID = this.lastPermanentChild ? this.lastPermanentChild.id : "";
 
             if (val && val != "__empty") {
               var itemIds = val.split(",");
               var before = true;
+              this._trackInserted = {};
               for (var i = 0; i < itemIds.length; i++) {
                 if (itemIds[i] == firstChildID || itemIds[i] == lastChildID)
                   before = false;
                 else
                   this.insertItem(itemIds[i], null, null, before);
               }
+              delete this._trackInserted;
             }
 
             return val;
           ]]>
         </setter>
       </property>
       
       <method name="insertItem">
@@ -218,16 +220,22 @@
               newItem.className = "chromeclass-toolbar-additional";
             } else if (aId == "spacer") {
               newItem = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",
                                                  "toolbarspacer");
               uniqueId = (new Date()).getTime()+this.childNodes.length;
               newItem.id = "spacer" + uniqueId;
               newItem.className = "chromeclass-toolbar-additional";
             } else if (this.parentNode.localName == "toolbox") {
+              if (this._trackInserted) {
+                // Protect against creating an item with the given id more than once.
+                if (aId in this._trackInserted)
+                  return false;
+                this._trackInserted[aId] = null;
+              }
               // Attempt to locate an item with a matching id within palette.
               var paletteItem = this.parentNode.palette.firstChild;
               while (paletteItem) {
                 var paletteId = paletteItem.id;
                 if (paletteId == aId) {
                   newItem = paletteItem.cloneNode(true);
                   break;
                 }
